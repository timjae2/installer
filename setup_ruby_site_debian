#!/bin/bash
user=$1
domain=$2
install=$3
serverip=`hostname -I | cut -d' ' -f1`

prereq () {
	# Setup prerequisites
	echo ""
	echo "Setup Prerequisites"
	echo "------------------------"
	apt update && apt -y install nginx default-mysql-server git apg libssl-dev ucommon-utils build-essential default-libmysqlclient-dev
	mkdir .temp
	cp -f vimrc /etc/vim/.
	cp -f sshd_config /etc/ssh/.
	cp -f sudoer_users /etc/sudoers.d/.
	echo "------------------------"
	echo "Prerequisites Complete."
	echo ""
}

setup_git () {
	# Setup git
	echo ""
	echo "Setup git"
	echo "------------------------"
	git config --global user.email "timjae@gmail.com"
	git config --global user.name "Timothy Jordan"
	git config --global core.editor vim
	echo "------------------------"
	echo "git Setup Complete"
	echo ""
}

setup_user () {
	# Add user
	echo ""
	echo "Setup user"
	echo "------------------------"
	useradd -d /var/www/$user -m -s /bin/bash $user
	echo "------------------------"
	echo "User Setup Complete"
	echo ""
}

setup_nginx () {
	# Create nginx site configuration
	echo ""
	echo "Setup nginx site configuration"
	echo "------------------------"

	sed "s/XXX_USER/$user/g" nginx.site.conf > .temp/$domain.conf.1
	sed "s/XXX_DOMAIN/$domain/g" .temp/$domain.conf.1 > .temp/$domain.conf.2
	sed "s/XXX_SERVERIP/$serverip/g" .temp/$domain.conf.2 > .temp/$domain.conf.3

	rm /etc/nginx/sites-enabled/default

	mkdir /var/www/$user/logs
	cp -f .temp/$domain.conf.3 /etc/nginx/sites-available/$domain.conf
	ln -s /etc/nginx/sites-available/$domain.conf /etc/nginx/sites-enabled/.
	echo "------------------------"
	echo "nginx Config Complete"
	echo ""
}

setup_rbenv () {
	# Setup rbenv
	echo ""
	echo "Setup rbenv"
	echo "------------------------"
	su - $user -c "git clone https://github.com/rbenv/rbenv.git ~/.rbenv" 

	echo 'eval "$(~/.rbenv/bin/rbenv init - bash)"' >> /var/www/$user/.bashrc
	echo "------------------------"
	echo "rbenv Setup Complete"
	echo ""
}

setup_rbuild () {
	# Setup rbenv install feature (ruby-build)
	echo ""
	echo "Setup ruby-build"
	echo "------------------------"
	su - $user -c "git clone https://github.com/rbenv/ruby-build.git /var/www/$user/.rbenv/plugins/ruby-build"
	echo "------------------------"
	echo "ruby-build Complete"
	echo ""
}

setup_ruby () {
	# Setup latest ruby
	echo ""
	echo "Setup latest ruby"
	echo "------------------------"
	su - $user -c "time /var/www/$user/.rbenv/bin/rbenv install 3.1.2 && /var/www/$user/.rbenv/bin/rbenv global 3.1.2"
	echo "------------------------"
	echo "ruby Setup Complete"
	echo ""
}

setup_gems () {
	# Setup gems
	echo ""
	echo "Setup gems"
	echo "------------------------"
	su - $user -c "/var/www/$user/.rbenv/versions/3.1.2/bin/gem install bundler rails mysql2 puma"
	echo "------------------------"
	echo "gems Setup Complete"
	echo ""
}

setup_rails () {
	# Setup new Rails install
	echo ""
	echo "Setup new rails app"
	echo "------------------------"
	su - $user -c "/var/www/$user/.rbenv/versions/3.1.2/bin/rails new $user"
	echo "------------------------"
	echo "rails app Setup Complete"
	echo ""
}

setup_rails_cfg () {
	# Setup rails config files
	echo ""
	echo "Setup new rails config"
	echo "------------------------"
	cp -f Gemfile /var/www/$user/$user/.
	sed "s/XXX_USER/$user/g" start_dev_puma > .temp/start_dev_puma.1
	sed "s/XXX_USER/$user/g" puma.rb > .temp/puma.rb.1
	sed "s/XXX_DOMAIN/$domain/g" development.rb > .temp/development.rb.1

	cp -f .temp/start_dev_puma.1 /var/www/$user/$user/start_dev_puma
	cp -f .temp/puma.rb.1 /var/www/$user/$user/config/puma.rb
	cp -f .temp/development.rb.1 /var/www/$user/$user/config/environments/development.rb

	chmod 0755 /var/www/$user/$user/start_dev_puma
	chown $user:$user /var/www/$user/$user/start_dev_puma /var/www/$user/$user/config/puma.rb /var/www/$user/$user/config/environments/development.rb /var/www/$user/$user/Gemfile 
	chmod 0755 /var/www/$user
	echo "------------------------"
	echo "rails config Complete"
	echo ""
}

setup_mysql () {
	pass=`apg -n1 -m12 -a1 | md5sum | cut -d' ' -f1`
	echo ""
	echo "Setup MySQL Database"
	echo "------------------------"
	mysqladmin create "$user"_dev
	mysqladmin create "$user"_test
	mysqladmin create "$user"_prod
	
	echo "Adding password $pass"
	sed "s/XXX_USER/$user/g" create_user.sql > .temp/create_user.sql.1
	sed "s/XXX_PASS/$pass/g" .temp/create_user.sql.1 > .temp/create_user.sql.2

	mysql -u root < .temp/create_user.sql.2

	echo "Adding password $pass"
	sed "s/XXX_USER/$user/g" database.yml > .temp/database.yml.1
	sed "s/XXX_PASS/$pass/g" .temp/database.yml.1 > .temp/database.yml.2
	cp -f .temp/database.yml.2 /var/www/$user/$user/config/database.yml
	echo "------------------------"
	echo "Database Setup Complete"
	echo ""
}

setup_service () {
	# Setup systemd service
	echo ""
	echo "Setup and start service"
	echo "------------------------"

	sed "s/XXX_USER/$user/g" puma.service > .temp/$user.service.1
	sed "s/XXX_DOMAIN/$domain/g" .temp/$user.service.1 > .temp/$user.service.2

	cp -f .temp/$user.service.2 /etc/systemd/system/$user.service

	systemctl daemon-reload
	systemctl enable $user
	service $user start
	echo "------------------------"
	echo "service Setup Complete"
	echo ""
}

restart_nginx () {
	# Restart nginx
	echo ""
	echo "Restart nginx"
	echo "------------------------"
	service nginx restart
	echo "------------------------"
	echo "nginx Restart Complete"
	echo ""
}

setup_ruby_site () {
	prereq
	setup_git
	setup_user
	setup_nginx
	setup_rbenv
	setup_rbuild
	setup_ruby
	setup_gems
	setup_rails
	setup_rails_cfg
	setup_mysql
	setup_service
	restart_nginx

	echo "where do we go now?"
}

if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]
then
	echo ""
	echo "./setup_ruby_site username domain/ip install-type"
	echo -n "
			install-types:
					full
					prereq
					setup_git
					setup_user
					setup_nginx
					setup_rbenv
					setup_rbuild
					setup_ruby
					setup_gems
					setup_rails
					setup_rails_cfg
					setup_mysql
					setup_service
					restart_nginx"
	echo ""
	exit 1
else
	if [ "$3" == "full" ]
	then
		echo ""
		read -p "user: $user domain: $domain install-type: $install serverip: $serverip"
		echo ""
		setup_ruby_site
		exit 0
	else
		echo ""
		read -p "user: $user domain: $domain install-type: $install serverip: $serverip"
		echo ""
		$install
		exit 0
	fi
fi
